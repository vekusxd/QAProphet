@startuml
left to right direction
class Answer {
    + <<required>> Content : string <<get>> <<set>>
    + AuthorId : Guid <<get>> <<init>>
    + <<required>> AuthorName : string <<get>> <<set>>
    + QuestionId : Guid <<get>> <<init>>
    + Question : Question <<get>> <<init>>
    + Likes : int <<get>> <<set>>
    + IsBest : bool <<get>> <<set>>
    + UpdatedAt : DateTime? <<get>> <<set>>
    + Comments : ICollection<AnswerComment> <<get>> <<set>>
    + AnswerLikes : ICollection<AnswerLike> <<get>> <<set>>
    + Complaints : ICollection<AnswerComplaint> <<get>> <<set>>
}
BaseEntity <|-- Answer
class AnswerComment {
    + <<required>> AnswerId : Guid <<get>> <<init>>
    + Answer : Answer <<get>> <<init>>
}
BaseComment <|-- AnswerComment
class AnswerComplaint {
    + <<required>> UserId : Guid <<get>> <<init>>
    + <<required>> AnswerId : Guid <<get>> <<init>>
    + Answer : Answer <<get>> <<init>>
    + <<required>> CategoryId : Guid <<get>> <<init>>
    + Category : AnswerComplaintCategory <<get>> <<init>>
}
BaseEntity <|-- AnswerComplaint
class AnswerComplaintCategory {
    + <<required>> Title : string <<get>> <<set>>
    + Complaints : ICollection<AnswerComplaint> <<get>> <<set>>
}
BaseEntity <|-- AnswerComplaintCategory
class AnswerLike {
    + <<required>> AnswerId : Guid <<get>> <<init>>
    + Answer : Answer <<get>> <<init>>
    + <<required>> AuthorId : Guid <<get>> <<init>>
}
BaseEntity <|-- AnswerLike
abstract class BaseComment {
    + <<required>> Content : string <<get>> <<set>>
    + <<required>> AuthorId : Guid <<get>> <<init>>
    + UpdateTime : DateTime? <<get>> <<set>>
    + <<required>> AuthorName : string <<get>> <<init>>
}
BaseEntity <|-- BaseComment
abstract class BaseEntity {
    + Id : Guid <<get>> <<init>>
    + IsDeleted : bool <<get>> <<set>>
    + CreatedAt : DateTime <<get>> <<init>>
}
class Question {
    + <<required>> Title : string <<get>> <<set>>
    + <<required>> Content : string <<get>> <<set>>
    + UpdateTime : DateTime? <<get>> <<set>>
    + <<required>> QuestionerId : Guid <<get>> <<init>>
    + <<required>> AuthorName : string <<get>> <<set>>
    + Answers : ICollection<Answer> <<get>> <<set>>
    + Comments : ICollection<QuestionComment> <<get>> <<set>>
    + Tags : ICollection<QuestionTags> <<get>> <<set>>
    + Subscribers : ICollection<QuestionSubscribe> <<get>> <<set>>
    + Complaints : ICollection<QuestionComplaint> <<get>> <<set>>
}
BaseEntity <|-- Question
class QuestionComment {
    + <<required>> QuestionId : Guid <<get>> <<init>>
    + Question : Question <<get>> <<init>>
}
BaseComment <|-- QuestionComment
class QuestionComplaint {
    + <<required>> UserId : Guid <<get>> <<init>>
    + <<required>> QuestionId : Guid <<get>> <<init>>
    + Question : Question <<get>> <<init>>
    + <<required>> CategoryId : Guid <<get>> <<init>>
    + Category : QuestionComplaintCategory <<get>> <<init>>
}
BaseEntity <|-- QuestionComplaint
class QuestionComplaintCategory {
    + <<required>> Title : string <<get>> <<set>>
    + Complaints : ICollection<QuestionComplaint> <<get>> <<set>>
}
BaseEntity <|-- QuestionComplaintCategory
class QuestionSubscribe {
    + <<required>> UserId : Guid <<get>> <<init>>
    + <<required>> QuestionId : Guid <<get>> <<init>>
    + Question : Question <<get>> <<init>>
}
BaseEntity <|-- QuestionSubscribe
class QuestionTags {
    + <<required>> QuestionId : Guid <<get>> <<init>>
    + Question : Question <<get>> <<init>>
    + <<required>> TagId : Guid <<get>> <<init>>
    + Tag : Tag <<get>> <<init>>
}
BaseEntity <|-- QuestionTags
class Tag {
    + <<required>> Title : string <<get>> <<set>>
    + <<required>> Description : string <<get>> <<set>>
    + Questions : ICollection<QuestionTags> <<get>> <<set>>
    + Subscribers : ICollection<TagSubscribe> <<get>> <<set>>
}
BaseEntity <|-- Tag
class TagSubscribe {
    + <<required>> UserId : Guid <<get>> <<init>>
    + <<required>> TagId : Guid <<get>> <<init>>
    + Tag : Tag <<get>> <<init>>
}
BaseEntity <|-- TagSubscribe
@enduml
